@import "mixins";

.playlistview-container {
  display: flex;
  flex-wrap: wrap;

  justify-content: center;
  height: 60vh;
  overflow: scroll;

  
  .playlistview-header {
    width: 100%;
  }

  .playlist-wrapper {
    perspective: 1000px;
  }

  // See citation for playlistcard
  .playlistcard {
    width: 250px;
    height: 250px;
    border: 1px solid white;
    margin: 5px 10px;
    background-color:rgba(#A0B3C4, .2);
    border-radius: 2px;
    position: relative;


    transform-style: preserve-3d;
    transition: transform 1.5s;
   

    .playlistcard-front {
      @include playlistCardStyling;
      height: 100%;
      overflow: hidden;
      margin: 0 auto;

      ul li {
        list-style-type: none;
      }
          
    }

  
    .playlistcard-back {
      @include playlistCardStyling;
      transform: rotateY(-180deg);
      height: 250px;
      overflow: hidden; // See notes
    }

    &:hover {
      transform: rotateY(-180deg);
    }

    h3 {
      text-align: center;
    }
  }
}


/*
Citations

Playlist
https://medium.com/designer-recipes/understanding-card-flip-animation-using-css-391c40ed3136

*/


/*
Notes
-In a BIG playlist with lots of songs, seeting the back card to overflow:scroll
makes the playlist text appear in the front of the card. Used overflow:hidden 
as a compromise.







